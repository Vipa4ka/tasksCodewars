

function findEvenIndex(arr) {
    let n = 0;
    // сумма всего массива
    const x=arr.reduce(function (sum, current) {
        return sum + current;
    }, 0);       
    for (let i = 0; i <= arr.length; i++) {
        if (x-arr[i] === 0) {
            return 0;
        } else {
            n = 0;
            for (let i = 0; i < arr.length; i++) {                
                if (n < arr.length - 1) {
                    // сумма правой стороны чисел
                    const b = (arr.slice(n + 2)).reduce(function (sum, current) {
                        return sum + current;
                    }, 0);
                    // сумма левой стороны чисел
                    const p = arr.slice(0, n + 1).reduce(function (sum, current) {
                        return sum + current;
                    }, 0);
                    n += 1;
                    if (b === p) {
                        return n
                    };                
                } else {
                        return -1
                };
            };
        };
    };
};

console.log(findEvenIndex([1, 2, 3, 4, 3, 2, 1]));
console.log(findEvenIndex([1,100,50,-51,1,1]));
console.log(findEvenIndex([1, 2, 3, 4, 5, 6]));
console.log(findEvenIndex([20, 10, 30, 10, 10, 15, 35]));
console.log(findEvenIndex([1, 3, 5, -6, 10]));








// Вам будет дан массив целых чисел. Ваша задача - взять этот массив и найти индекс N, в котором сумма целых чисел слева от N равна сумме целых чисел справа от N. Если нет индекса, по которому это могло бы произойти, вернитесь -1.
// Например:
// Допустим, вам дан массив {1,2,3,4,3,2,1}:
// ваша функция вернет индекс 3, потому что в 3-й позиции массива сумма левой части index ( {1,2,3}) и сумма правой части index ( {3,2,1}) равны 6.
// Посмотрим еще на один.
// Вам дан массив {1,100,50,-51,1,1}:
// ваша функция вернет индекс 1, потому что в 1-й позиции массива сумма левой части index ( {1}) и сумма правой части index ( {50,-51,1,1}) равны 1.
// Последний:
// вам дан массив с {20,10,-80,10,10,15,35}
// индексом 0, левая сторона - {}
// правая сторона. {10,-80,10,10,15,35}
// Они оба равны 0при добавлении. (Пустые массивы в этой задаче равны 0)
// Индекс 0 - это место, где левая и правая стороны равны.
// Примечание: помните, что в большинстве языков программирования / сценариев индекс массива начинается с 0.
// Вход:
// целочисленный массив длины 0 < arr < 1000. Числа в массиве могут быть любыми целыми положительными или отрицательными.
// Выходные данные:
// наименьший индекс, в Nкотором сторона слева Nравна стороне справа N. Если вы не найдете индекс, соответствующий этим правилам, вы вернетесь -1.
// Примечание.
// Если вам дан массив с несколькими ответами, верните наименьший правильный индекс.